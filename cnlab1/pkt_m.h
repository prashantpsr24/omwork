//
// Generated file, do not edit! Created by nedtool 4.6 from pkt.msg.
//

#ifndef _PKT_M_H_
#define _PKT_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>pkt.msg:20</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * enum t
 * {
 * 
 *     DATA = 0;
 *     ACK = 1;
 * }
 * </pre>
 */
enum t {
    DATA = 0,
    ACK = 1
};

/**
 * Class generated from <tt>pkt.msg:25</tt> by nedtool.
 * <pre>
 * message Pkt
 * {
 *     int id;
 *     int src;
 *     int dest;
 *     bool type @enum(t);
 * }
 * </pre>
 */
class Pkt : public ::cMessage
{
  protected:
    int id_var;
    int src_var;
    int dest_var;
    bool type_var;

  private:
    void copy(const Pkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Pkt&);

  public:
    Pkt(const char *name=NULL, int kind=0);
    Pkt(const Pkt& other);
    virtual ~Pkt();
    Pkt& operator=(const Pkt& other);
    virtual Pkt *dup() const {return new Pkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getId() const;
    virtual void setId(int id);
    virtual int getSrc() const;
    virtual void setSrc(int src);
    virtual int getDest() const;
    virtual void setDest(int dest);
    virtual bool getType() const;
    virtual void setType(bool type);
};

inline void doPacking(cCommBuffer *b, Pkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Pkt& obj) {obj.parsimUnpack(b);}


#endif // ifndef _PKT_M_H_

